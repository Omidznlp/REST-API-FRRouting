# Generated by Django 3.0.7 on 2020-09-20 11:48

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Pbr',
            fields=[
                ('nexthop_group_name', models.CharField(max_length=200, null=True)),
                ('nexthop_ip', models.GenericIPAddressField(null=True)),
                ('nexthop_interface', models.CharField(max_length=200, null=True)),
                ('label', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(16), django.core.validators.MaxValueValidator(1048575)])),
                ('map_name', models.CharField(max_length=200, null=True)),
                ('map_seq', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(700)])),
                ('match_src_ip', models.GenericIPAddressField(null=True)),
                ('mask_src_ip', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(32)])),
                ('match_dst_ip', models.GenericIPAddressField(null=True)),
                ('mask_dst_ip', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(32)])),
                ('match_mark', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4294967295)])),
                ('set_nexthop_group_name', models.CharField(max_length=200, null=True)),
                ('set_nexthop_ip', models.GenericIPAddressField(null=True)),
                ('set_nexthop_interface', models.CharField(max_length=200, null=True)),
                ('interface_name', models.CharField(max_length=200, null=True)),
                ('apply_pbr_interface', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RouteMap',
            fields=[
                ('seq', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)])),
                ('name', models.CharField(max_length=200, null=True)),
                ('action', models.CharField(choices=[('permit', 'permit'), ('deny', 'deny')], max_length=20)),
                ('match_accesslist_num', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)])),
                ('match_accesslist_expanded', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1300), django.core.validators.MaxValueValidator(2699)])),
                ('match_prefix_len', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(32)])),
                ('match_prefix_list', models.CharField(max_length=200, null=True)),
                ('match_nexthop_accesslist_num', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)])),
                ('match_nexthop_accesslist_expanded', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1300), django.core.validators.MaxValueValidator(2699)])),
                ('match_nexthop_prefix_len', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(32)])),
                ('match_nexthop_prefix_list', models.CharField(max_length=200, null=True)),
                ('match_as_path', models.CharField(max_length=200, null=True)),
                ('match_community_name', models.CharField(max_length=200, null=True)),
                ('match_community_standard', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('match_community_expanded', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(500)])),
                ('match_metric', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4294967295)])),
                ('match_tag', models.CharField(max_length=200, null=True)),
                ('match_local_preference', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4294967295)])),
                ('match_peer_ip', models.GenericIPAddressField(null=True)),
                ('match_peer_interface', models.CharField(max_length=200)),
                ('match_source_protocol', models.CharField(choices=[('bgp', 'bgp'), ('ospf', 'ospf'), ('rip', 'rip'), ('ripng', 'ripng'), ('static', 'static')], max_length=20)),
                ('match_source_instance', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(255)])),
                ('match_origin', models.CharField(choices=[('egp', 'egp'), ('igp', 'igp'), ('incomplete', 'incomplete')], max_length=20)),
                ('set_tag', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4294967295)])),
                ('set_ip_nexthop', models.GenericIPAddressField(null=True)),
                ('set_nexthop_peer_addr_bgp', models.BooleanField(null=True)),
                ('set_nexthop_unchanged', models.BooleanField(null=True)),
                ('set_local_preference', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4294967295)])),
                ('set_local_preference_add', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4294967295)])),
                ('set_local_preference_sub', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4294967295)])),
                ('set_distance', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(255)])),
                ('set_as_path_bgp_exclude', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4294967295)])),
                ('set_as_path_bgp_prepend', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4294967295)])),
                ('set_community_name', models.CharField(max_length=200, null=True)),
                ('set_metric', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4294967295)])),
                ('set_origin', models.CharField(choices=[('egp', 'egp'), ('igp', 'igp'), ('incomplete', 'incomplete')], max_length=20)),
                ('set_aggregator_num', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4294967295)])),
                ('set_aggregator_ip', models.GenericIPAddressField(null=True)),
                ('call', models.CharField(max_length=200, null=True)),
                ('continue_seq', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)])),
            ],
        ),
        migrations.CreateModel(
            name='RouteMapAccessList',
            fields=[
                ('seq', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4294967295)])),
                ('range_standard_first', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('range_standard_second', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1300), django.core.validators.MaxValueValidator(1999)])),
                ('range_expanded_first', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(199)])),
                ('range_expanded_second', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2699)])),
                ('action', models.CharField(choices=[('permit', 'permit'), ('deny', 'deny')], max_length=19)),
                ('ip_st_ex', models.GenericIPAddressField(null=True)),
                ('prefix_st_ex', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(32)])),
                ('any_all_st_ex', models.BooleanField(null=True)),
                ('host_st', models.GenericIPAddressField(null=True)),
                ('ip_src_ex', models.GenericIPAddressField(null=True)),
                ('ip_src_wildcard_ex', models.GenericIPAddressField(null=True)),
                ('ip_dst_ex', models.GenericIPAddressField(null=True)),
                ('ip_dst_wildcard_ex', models.GenericIPAddressField(null=True)),
                ('ip_any_src_ex', models.BooleanField(null=True)),
                ('ip_any_dst_ex', models.BooleanField(null=True)),
                ('ip_host_src_ex', models.GenericIPAddressField(null=True)),
                ('ip_host_dst_ex', models.GenericIPAddressField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RouteMapPreFixList',
            fields=[
                ('seq', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4294967295)])),
                ('name', models.CharField(max_length=200)),
                ('action', models.CharField(choices=[('permit', 'permit'), ('deny', 'deny')], max_length=19)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('prefix', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(32)])),
                ('le', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(32)])),
                ('ge', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(32)])),
            ],
        ),
    ]
